apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: adguard-statefulset
  namespace: adguard-home
spec:
  serviceName: "adguard"
  replicas: 2  # Number of replicas
  selector:
    matchLabels:
      app: adguard-home
  template:
    metadata:
      labels:
        app: adguard-home
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - adguard-home
              topologyKey: "kubernetes.io/hostname" # Ensure 1 pod per node
      containers:
      - name: adguard-home
        image: adguard/adguardhome:latest
        ports:
        - containerPort: 53
          name: dns
          hostPort: 53  # Bind the node's port to the pod for DNS
          protocol: UDP
        - containerPort: 3000
          name: http-initial
        - containerPort: 80
          name: http
          hostPort: 5380 # Bind the node's port to the pod for API/UI
          protocol: TCP
        volumeMounts:
        - name: adguard-data
          mountPath: /opt/adguardhome/work/ # AdGuard Runtime data
        - name: adguard-config
          mountPath: /opt/adguardhome/conf/ # AdGuard configuration
  volumeClaimTemplates:
  - metadata:
      name: adguard-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
      storageClassName: "local-path"
  - metadata:
      name: adguard-config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
      storageClassName: "local-path"
---
apiVersion: v1
kind: Service
metadata:
  name: adguard-home-svc
  namespace: adguard-home
  annotations:
    tailscale.com/expose: "true"
spec:
  type: NodePort
  selector:
    app: adguard-home
  ports:
    - name: webui
      port: 3000 
      targetPort: 3000
      protocol: TCP
